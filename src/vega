#!/bin/sh
#
# vega - a simpler and faster cli system information tool
# Copyright (C) 2023 Frank Tao
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.

vegaver="1.0.0-dev"

# Color variables
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
blue='\033[0;34m'
magenta='\033[0;35m'
cyan='\033[0;36m'

accent=$blue
bold='\033[1m'
soft='\033[2m'
reset='\033[0m'


# Sets global vars

DIR=$(dirname "$(readlink -f "$0")")
LNTMP=$(mktemp /tmp/vega.XXXX) && echo 0 > $LNTMP
DIST=$(cat /etc/os-release | grep ^ID= | sed 's/ID=//g')

if [ -z "$HOME" ]; then
    HOME=~/
fi


# Looks for config files

if [ -e $HOME/.config/vega/config.sh ]; then
    . $HOME/.config/vega/config.sh
else 
    . $DIR/config.sh
fi


# Formatting Helper Functions

printlogo() {
    IFS=%

    # Tracks logo line number
    ln=$(cat $LNTMP)
    data=$($DIR/logoutils $DIST $ln 2>/dev/null)
    lastln=$?

    # Prints logo
    printf "$data"

    # Pads logo with spaces
    strwidth="$(echo $data | sed -E "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g" | wc -c)"
    totalwidth=$($DIR/logoutils $DIST --width 2>/dev/null)
    printf "%$((totalwidth - strwidth + 4))s"

    # Updates line number
    echo $((ln + 1)) > $LNTMP

    if [ "$1" = "finish" ] && [ "$lastln" = "0" ]; then
        printf '\n'
        printlogo finish
    fi;

    unset IFS
}

title() {
    printlogo

    if [ $(uname) = "Linux" ]; then
        titlelen=$(echo "$(whoami)""$(cat /etc/hostname)" | wc -c)
        printf "${accent}${bold}$(whoami)${reset}@${accent}${bold}$(cat /etc/hostname)${reset}\n"
    else
        titlelen=$(echo "$(whoami)""$(hostname)" | wc -c)
        printf "${accent}${bold}$(whoami)${reset}@${accent}${bold}$(hostname)${reset}\n"
    fi
    
    printlogo
    printf "%${titlelen}s\n" | tr " " "="
}

subtitl() {
    printlogo
    printf "${bold}< $* >${reset}\n"
}

firstentry() {
    printlogo
    printf "${accent}${bold}╔ $* = ${reset}"
}

entry() {
    printlogo
    printf "${accent}${bold}╠ $* = ${reset}"
}

lastentry() {
    printlogo
    printf "${accent}${bold}╚ $* = ${reset}"
}


# Data-getting functions
# Hardware

model() {
    modelname=$(cat /sys/devices/virtual/dmi/id/product_name 2>/dev/null)
    if [ -z "$modelname" ]; then
        modelname="Not Supported"
    fi
    printf "$*$modelname${reset}\n"
}

cpu() {
    if [ $(uname) = "FreeBSD" ]; then
        corecount=$(sysctl hw.ncpu | awk -F ': ' '{print $2}')
        cpumodel=$(sysctl hw.model | awk -F ': ' '{print $2}')
    else
        corecount=$(($(cat /proc/cpuinfo | grep 'processor' | awk -F ': ' '{print $2}' | tail -1)+1))
        cpumodel=$(cat /proc/cpuinfo | grep -m1 'model name' | awk -F ': ' '{print $2}')
    fi
    printf "$*$cpumodel ($corecount)${reset}\n"
}

gpu() {
    printf "$*$($DIR/vegautils --gpu 2>/dev/null)${reset}\n"
}

mem() {

    if [ $(uname) = "FreeBSD" ]; then
        memtotal=$(expr $(sysctl -n hw.physmem) / 1048576)
        memused=$(expr $(sysctl -n vm.stats.vm.v_active_count) \* $(sysctl -n hw.pagesize) / 1048576)
    else
        memtotal=$(expr $(cat /proc/meminfo | grep MemTotal: | awk -F ' ' '{print $2}') / 1024)
        memused=$(expr $(cat /proc/meminfo | grep Active: | awk -F ' ' '{print $2}') / 1024)
    fi

    printf "$*"$memused"MB / "$memtotal"MB\n"
}

hdd() {
    printf "$*$($DIR/vegautils --disk 2>/dev/null)${reset}\n"
}

res() {
    res=$(head -n1 -q /sys/class/drm/*/modes 2>/dev/null)
    printf "$*$([ -z "$res" ] && echo "None" || echo $res)${reset}\n"
}

# Software

os() {
    printf "$*$(cat /etc/os-release | grep PRETTY_NAME | awk -F '"' '{print $2}')${reset}\n"
}

kernel() {
    printf "$*$($DIR/vegautils --kernel 2>/dev/null)${reset}\n"
}

uptime() {
    printf "$*$($DIR/vegautils --uptime 2>/dev/null)${reset}\n"

}

packages() {
    
    # Inspired by neofetch by Dylan Araps
    has() { type "$1" 2>/dev/null 1>/dev/null ; }
    show() { printf "$("$@" | wc -l | awk '{print $1}') ($(echo $1 | sed 's/-.*//g'))"; }

    printf "$@"

    has kiss       && show kiss l
    has cpt-list   && show cpt-list
    has pacman-key && show pacman -Qq --color never
    has dpkg       && show dpkg-query -f '.\n' -W
    has xbps-query && show xbps-query -l
    has apk        && show apk info
    has opkg       && show opkg list-installed
    has pacman-g2  && show pacman-g2 -Q
    has lvu        && show lvu installed
    has tce-status && show tce-status -i
    has pkg_info   && show pkg_info
    has pkgin      && show pkgin list
    has tazpkg     && show tazpkg list
    has sorcery    && show gaze installed
    has alps       && show alps showinstalled
    has butch      && show butch list
    has swupd      && show swupd bundle-list --quiet
    has pisi       && show pisi li
    has pacstall   && show pacstall -L
    has rpm        && show rpm -qa
    has pkg        && show pkg info

    printf "${reset}\n"
}

wm() {
    has() { type "$1" 2>/dev/null 1>/dev/null ; }
    retval=0

    has fuser
    if [ $? = 0 ]; then
        wmpid="$(fuser "${XDG_RUNTIME_DIR}/${WAYLAND_DISPLAY:-wayland-0}" 2>&1)"
        retval=$?
        wmpid="$(echo $wmpid | awk -F ' ' '{print $2}')"
    else
        wmpid="$(lsof -t "${XDG_RUNTIME_DIR}/${WAYLAND_DISPLAY:-wayland-0}" 2>&1)"
        retval=$?
    fi

    if [ $retval = 0 ]; then
        printf "$*$(cat /proc/${wmpid}/comm)${reset}\n"
    else
        printf "$*X11/None${reset}\n"
    fi
}

get_parent_pid() {
    if [ $(uname) = "FreeBSD" ]; then
        cat /proc/$1/status | awk -F ' ' '{print $3}'
    else
        cat /proc/$1/stat | awk -F ' ' '{print $4}'
    fi
}

get_process_name() {
    if [ $(uname) = "FreeBSD" ]; then
        cat /proc/$1/status | awk -F ' ' '{print $1}'
    else
        cat /proc/$termpid/comm
    fi
}

terminal() {
    termpid=$(get_parent_pid $$)
    termpid=$(get_parent_pid $termpid)
    printf "$*$(get_process_name $termpid)${reset}\n"
}

shell() {
    termpid=$(get_parent_pid $$)
    printf "$*$(get_process_name $termpid)${reset}\n"
}

ip_local() {
    printf "$*$($DIR/vegautils --ip 2>/dev/null)${reset}\n"
}


# Misc functions

colors() {
    for i in {0..7}; do
        printf '\033[1;4'$i'm   \033[0m'
    done

    for i in {0..7}; do
        printf '\033[10'$i'm   \033[0m'
    done
    printf '\n'
}

version() {
    printf "vega ${vegaver}\n"

    vermsg="Copyright (C) 2023 Frank Tao

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <https://www.gnu.org/licenses/>."

    printf "${vermsg}\n"
}

showhelp() {
    printf "vega ${vegaver}\n"

helpmsg="Copyright (C) 2023 Frank Tao, www.franktao.com

Usage:  vega
        vega [option]

options:
    --model
        Displays device mode and exits
    --cpu
        Displays cpu and exits
    --gpu
        Displays the first gpu detected and exits
    --ram
        Displays memory info and exits
    --disk
        Displays free space / total space of the root partition
    --res
        Displays the screen resolution of the first monitor
    --os
        Displays the name of the operating system
    --uptime
        Displays the system uptime
    --pkg
        Displays the number of packages
    --wm
        Displays the current window manager
    --term
        Displays the current terminal
    --shell
        Displays the current shell
    --ip
        Displays the current device's local ip address
    --version
        Displays the version and license information
    --help
        Displays this help message

License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software; you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law."

    printf "${helpmsg}\n"
}

installconf() {
    mkdir -p $HOME/.config/vega
    cp $DIR/config.sh $HOME/.config/vega/config.sh
}


# Read flags

case $1 in
    "--model")
        model
        exit
        ;;
    "--cpu")
        cpu
        exit
        ;;
    "--gpu")
        gpu
        exit
        ;;
    "--ram")
        ram
        exit
        ;;
    "--disk")
        disk
        exit
        ;;
    "--res")
        res
        exit
        ;;
    "--os")
        os
        exit
        ;;
    "--uptime")
        uptime
        exit
        ;;
    "--pkg")
        packages
        exit
        ;;
    "--wm")
        wm
        exit
        ;;
    "--term")
        term
        exit
        ;;
    "--shell")
        shell
        exit
        ;;
    "--ip")
        ip
        exit
        ;;
    "--version")
        version
        exit
        ;;
    "--help")
        showhelp
        exit
        ;;
    "--installconf")
        installconf
        exit
        ;;
    *)
esac


# Run fetch

fetch
rm -f $LNTMP
